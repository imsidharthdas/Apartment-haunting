function apartmentHunting(blocks, reqs) {
  // Write your code here.
}

# O(b^2*r) time | O(b) space - where b is the number of blocks and r is the number of requirements
DEFINE FUNCTION apartmentHunting(blocks, reqs):
    SET maxDistancesAtBlocks TO [float("-inf") FOR block IN blocks]
    FOR i IN range(len(blocks)):
        FOR req IN reqs:
            SET closestReqDistance TO float("inf")
            FOR j IN range(len(blocks)):
                IF blocks[j][req]:
                    SET closestReqDistance TO min(closestReqDistance, distanceBetween(i, j))
            SET maxDistancesAtBlocks[i] TO max(maxDistancesAtBlocks[i], closestReqDistance)
    RETURN getIdxAtMinValue(maxDistancesAtBlocks)

DEFINE FUNCTION getIdxAtMinValue(array):
    SET idxAtMinValue TO 0
    SET minValue TO float("inf")
    FOR i IN range(len(array)):
        SET currentValue TO array[i]
        IF currentValue < minValue:
            SET minValue TO currentValue
            SET idxAtMinValue TO i
    RETURN idxAtMinValue

DEFINE FUNCTION distanceBetween(a, b):
    RETURN abs(a - b)

// Do not edit the line below.
exports.apartmentHunting = apartmentHunting;

